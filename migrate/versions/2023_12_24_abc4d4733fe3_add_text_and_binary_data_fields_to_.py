"""Add text and binary data fields to resource

Revision ID: abc4d4733fe3
Revises: cf2750a8fc1e
Create Date: 2023-12-24 19:47:09.935144

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'abc4d4733fe3'
down_revision = 'cf2750a8fc1e'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - adjusted ###
    op.add_column('resource', sa.Column('text_data', sa.Text(), nullable=True))
    op.add_column('resource', sa.Column('binary_data', postgresql.BYTEA(), nullable=True))
    op.alter_column('resource', 'timestamp',
                    existing_type=postgresql.TIMESTAMP(timezone=True),
                    nullable=False)
    op.create_unique_constraint('resource_archive_id_path_key', 'resource', ['archive_id', 'path'])
    # ### end Alembic commands ###

    op.create_check_constraint('resource_type_data_check', 'resource',
                               "type = 'file' OR (text_data IS NULL AND binary_data IS NULL)")
    op.create_check_constraint('resource_text_binary_check', 'resource',
                               "text_data IS NULL OR binary_data IS NULL")


def downgrade():
    op.drop_constraint('resource_type_data_check', 'resource', type_='check')
    op.drop_constraint('resource_text_binary_check', 'resource', type_='check')

    # ### commands auto generated by Alembic - adjusted ###
    op.drop_constraint('resource_archive_id_path_key', 'resource', type_='unique')
    op.alter_column('resource', 'timestamp',
                    existing_type=postgresql.TIMESTAMP(timezone=True),
                    nullable=True)
    op.drop_column('resource', 'binary_data')
    op.drop_column('resource', 'text_data')
    # ### end Alembic commands ###
