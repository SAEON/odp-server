"""Keyword hierarchy

Revision ID: 992c6cd62f44
Revises: 9a3e9cbc19d1
Create Date: 2024-06-20 10:25:31.153446

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '992c6cd62f44'
down_revision = '9a3e9cbc19d1'
branch_labels = None
depends_on = None


def upgrade():
    # new enum values must be committed before they can be used
    op.execute("alter type schematype add value if not exists 'keyword' before 'vocabulary'")
    op.execute('commit')

    # ### commands auto generated by Alembic - adjusted ###
    op.create_table('keyword_audit',
                    sa.Column('id', sa.Integer(), sa.Identity(always=False), nullable=False),
                    sa.Column('client_id', sa.String(), nullable=False),
                    sa.Column('user_id', sa.String(), nullable=True),
                    sa.Column('command', postgresql.ENUM(name='auditcommand', create_type=False), nullable=False),
                    sa.Column('timestamp', sa.TIMESTAMP(timezone=True), nullable=False),
                    sa.Column('_key', sa.String(), nullable=False),
                    sa.Column('_data', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
                    sa.Column('_status', sa.String(), nullable=False),
                    sa.Column('_child_schema_id', sa.String(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('keyword',
                    sa.Column('key', sa.String(), nullable=False),
                    sa.Column('data', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
                    sa.Column('status', sa.Enum('proposed', 'approved', 'rejected', name='keywordstatus'), nullable=False),
                    sa.Column('parent_key', sa.String(), nullable=True),
                    sa.Column('child_schema_id', sa.String(), nullable=True),
                    sa.Column('child_schema_type', postgresql.ENUM(name='schematype', create_type=False), nullable=True),
                    sa.CheckConstraint("child_schema_type = 'keyword'", name='keyword_child_schema_type_check'),
                    sa.CheckConstraint('parent_key is not null or child_schema_id is not null', name='keyword_root_child_schema_check'),
                    sa.CheckConstraint('parent_key is null or starts_with(key, parent_key)', name='keyword_parent_key_suffix_check'),
                    sa.ForeignKeyConstraint(['child_schema_id', 'child_schema_type'], ['schema.id', 'schema.type'], name='keyword_child_schema_fkey',
                                            ondelete='RESTRICT'),
                    sa.ForeignKeyConstraint(['parent_key'], ['keyword.key'], ondelete='RESTRICT'),
                    sa.PrimaryKeyConstraint('key')
                    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - adjusted ###
    op.drop_table('keyword')
    op.drop_table('keyword_audit')
    op.execute('drop type keywordstatus')
    # ### end Alembic commands ###
