"""Archive integration

Revision ID: 7102c8734154
Revises: df57d06e1ee5
Create Date: 2024-03-26 14:43:52.793498

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '7102c8734154'
down_revision = 'df57d06e1ee5'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - adjusted ###
    op.create_table('archive',
                    sa.Column('id', sa.String(), nullable=False),
                    sa.Column('url', sa.String(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('package',
                    sa.Column('id', sa.String(), nullable=False),
                    sa.Column('metadata_', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
                    sa.Column('validity', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
                    sa.Column('notes', sa.String(), nullable=True),
                    sa.Column('timestamp', sa.TIMESTAMP(timezone=True), nullable=False),
                    sa.Column('provider_id', sa.String(), nullable=False),
                    sa.Column('schema_id', sa.String(), nullable=False),
                    sa.Column('schema_type', postgresql.ENUM(name='schematype', create_type=False), nullable=False),
                    sa.CheckConstraint("schema_type = 'metadata'", name='package_schema_type_check'),
                    sa.ForeignKeyConstraint(['provider_id'], ['provider.id'], ondelete='RESTRICT'),
                    sa.ForeignKeyConstraint(['schema_id', 'schema_type'], ['schema.id', 'schema.type'], name='package_schema_fkey',
                                            ondelete='RESTRICT'),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('resource',
                    sa.Column('id', sa.String(), nullable=False),
                    sa.Column('title', sa.String(), nullable=False),
                    sa.Column('description', sa.String(), nullable=True),
                    sa.Column('filename', sa.String(), nullable=True),
                    sa.Column('mimetype', sa.String(), nullable=True),
                    sa.Column('size', sa.BigInteger(), nullable=True),
                    sa.Column('md5', sa.String(), nullable=True),
                    sa.Column('timestamp', sa.TIMESTAMP(timezone=True), nullable=False),
                    sa.Column('provider_id', sa.String(), nullable=False),
                    sa.ForeignKeyConstraint(['provider_id'], ['provider.id'], ondelete='RESTRICT'),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('user_provider',
                    sa.Column('user_id', sa.String(), nullable=False),
                    sa.Column('provider_id', sa.String(), nullable=False),
                    sa.ForeignKeyConstraint(['provider_id'], ['provider.id'], ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('user_id', 'provider_id')
                    )
    op.create_table('archive_resource',
                    sa.Column('archive_id', sa.String(), nullable=False),
                    sa.Column('resource_id', sa.String(), nullable=False),
                    sa.Column('path', sa.String(), nullable=False),
                    sa.Column('timestamp', sa.TIMESTAMP(timezone=True), nullable=False),
                    sa.ForeignKeyConstraint(['archive_id'], ['archive.id'], ondelete='RESTRICT'),
                    sa.ForeignKeyConstraint(['resource_id'], ['resource.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('archive_id', 'resource_id'),
                    sa.UniqueConstraint('archive_id', 'path')
                    )
    op.create_table('package_resource',
                    sa.Column('package_id', sa.String(), nullable=False),
                    sa.Column('resource_id', sa.String(), nullable=False),
                    sa.ForeignKeyConstraint(['package_id'], ['package.id'], ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(['resource_id'], ['resource.id'], ondelete='RESTRICT'),
                    sa.PrimaryKeyConstraint('package_id', 'resource_id')
                    )
    op.create_table('record_package',
                    sa.Column('record_id', sa.String(), nullable=False),
                    sa.Column('package_id', sa.String(), nullable=False),
                    sa.ForeignKeyConstraint(['package_id'], ['package.id'], ondelete='RESTRICT'),
                    sa.ForeignKeyConstraint(['record_id'], ['record.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('record_id', 'package_id'),
                    sa.UniqueConstraint('package_id')
                    )
    op.drop_table('client_collection')
    op.add_column('client', sa.Column('provider_specific', sa.Boolean(), server_default='false', nullable=False))
    op.add_column('client', sa.Column('provider_id', sa.String(), nullable=True))
    op.create_foreign_key('client_provider_id_fkey', 'client', 'provider', ['provider_id'], ['id'], ondelete='SET NULL')
    op.drop_column('client', 'collection_specific')
    op.add_column('identity_audit', sa.Column('_providers', sa.ARRAY(sa.String()), nullable=True))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - adjusted ###
    op.drop_column('identity_audit', '_providers')
    op.add_column('client', sa.Column('collection_specific', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False))
    op.drop_constraint('client_provider_id_fkey', 'client', type_='foreignkey')
    op.drop_column('client', 'provider_id')
    op.drop_column('client', 'provider_specific')
    op.create_table('client_collection',
                    sa.Column('client_id', sa.VARCHAR(), autoincrement=False, nullable=False),
                    sa.Column('collection_id', sa.VARCHAR(), autoincrement=False, nullable=False),
                    sa.ForeignKeyConstraint(['client_id'], ['client.id'], name='client_collection_client_id_fkey', ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(['collection_id'], ['collection.id'], name='client_collection_collection_id_fkey', ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('client_id', 'collection_id', name='client_collection_pkey')
                    )
    op.drop_table('record_package')
    op.drop_table('package_resource')
    op.drop_table('archive_resource')
    op.drop_table('user_provider')
    op.drop_table('resource')
    op.drop_table('package')
    op.drop_table('archive')
    # ### end Alembic commands ###
