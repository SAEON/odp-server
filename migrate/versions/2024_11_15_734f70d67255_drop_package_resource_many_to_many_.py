"""Drop package_resource many-to-many relation

Revision ID: 734f70d67255
Revises: 5cb26063cc6c
Create Date: 2024-11-15 12:50:25.957084

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '734f70d67255'
down_revision = '5cb26063cc6c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - adjusted ###
    op.drop_table('package_resource')
    op.drop_constraint('archive_resource_resource_id_fkey', 'archive_resource', type_='foreignkey')
    op.create_foreign_key('archive_resource_resource_id_fkey', 'archive_resource', 'resource', ['resource_id'], ['id'], ondelete='RESTRICT')
    op.add_column('resource', sa.Column('folder', sa.String(), nullable=False))
    op.add_column('resource', sa.Column('package_id', sa.String(), nullable=False))
    op.alter_column('resource', 'filename',
                    existing_type=sa.VARCHAR(),
                    nullable=False)
    op.create_index('resource_package_path_uix', 'resource', [sa.text("(package_id || '/' || folder || '/' || filename)")], unique=True)
    op.drop_constraint('resource_title_or_filename_check', 'resource')
    op.drop_constraint('resource_provider_id_fkey', 'resource', type_='foreignkey')
    op.create_foreign_key('resource_package_id_fkey', 'resource', 'package', ['package_id'], ['id'], ondelete='RESTRICT')
    op.drop_column('resource', 'provider_id')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - adjusted ###
    op.add_column('resource', sa.Column('provider_id', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint('resource_package_id_fkey', 'resource', type_='foreignkey')
    op.create_foreign_key('resource_provider_id_fkey', 'resource', 'provider', ['provider_id'], ['id'], ondelete='RESTRICT')
    op.create_check_constraint('resource_title_or_filename_check', 'resource', 'title is not null or filename is not null')
    op.drop_index('resource_package_path_uix', table_name='resource')
    op.alter_column('resource', 'filename',
                    existing_type=sa.VARCHAR(),
                    nullable=True)
    op.drop_column('resource', 'package_id')
    op.drop_column('resource', 'folder')
    op.drop_constraint('archive_resource_resource_id_fkey', 'archive_resource', type_='foreignkey')
    op.create_foreign_key('archive_resource_resource_id_fkey', 'archive_resource', 'resource', ['resource_id'], ['id'], ondelete='CASCADE')
    op.create_table('package_resource',
                    sa.Column('package_id', sa.VARCHAR(), autoincrement=False, nullable=False),
                    sa.Column('resource_id', sa.VARCHAR(), autoincrement=False, nullable=False),
                    sa.Column('path', sa.VARCHAR(), autoincrement=False, nullable=False),
                    sa.Column('timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
                    sa.ForeignKeyConstraint(['package_id'], ['package.id'], name='package_resource_package_id_fkey', ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(['resource_id'], ['resource.id'], name='package_resource_resource_id_fkey', ondelete='RESTRICT'),
                    sa.PrimaryKeyConstraint('package_id', 'resource_id', name='package_resource_pkey'),
                    sa.UniqueConstraint('package_id', 'path', name='package_resource_package_id_path_key')
                    )
    # ### end Alembic commands ###
