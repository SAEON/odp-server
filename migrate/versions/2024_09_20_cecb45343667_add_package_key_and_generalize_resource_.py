"""Add package key and generalize resource hash

Revision ID: cecb45343667
Revises: 23e051502f55
Create Date: 2024-09-20 14:14:16.286347

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'cecb45343667'
down_revision = '23e051502f55'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - adjusted ###
    op.execute("create type hashalgorithm as enum ('md5', 'sha256')")
    op.add_column('package', sa.Column('key', sa.String(), nullable=False))
    op.create_unique_constraint('package_provider_id_package_key', 'package', ['provider_id', 'key'])
    op.add_column('package_audit', sa.Column('_key', sa.String(), nullable=False))
    op.add_column('resource', sa.Column('hash', sa.String(), nullable=True))
    op.add_column('resource', sa.Column('hash_algorithm', postgresql.ENUM(name='hashalgorithm', create_type=False), nullable=True))
    op.alter_column('resource', 'title',
                    existing_type=sa.VARCHAR(),
                    nullable=True)
    op.drop_column('resource', 'md5')
    op.create_check_constraint('resource_hash_algorithm_check',
                               'resource',
                               'hash is null or hash_algorithm is not null')
    op.create_check_constraint('resource_title_or_filename_check',
                               'resource',
                               'title is not null or filename is not null')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - adjusted ###
    op.drop_constraint('resource_title_or_filename_check', 'resource', type_='check')
    op.drop_constraint('resource_hash_algorithm_check', 'resource', type_='check')
    op.add_column('resource', sa.Column('md5', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.alter_column('resource', 'title',
                    existing_type=sa.VARCHAR(),
                    nullable=False)
    op.drop_column('resource', 'hash_algorithm')
    op.drop_column('resource', 'hash')
    op.drop_column('package_audit', '_key')
    op.drop_constraint('package_provider_id_package_key', 'package', type_='unique')
    op.drop_column('package', 'key')
    op.execute('drop type hashalgorithm')
    # ### end Alembic commands ###
