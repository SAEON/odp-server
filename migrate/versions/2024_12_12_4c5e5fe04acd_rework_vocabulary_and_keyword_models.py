"""Rework vocabulary and keyword models

Revision ID: 4c5e5fe04acd
Revises: 75fd0f193787
Create Date: 2024-12-12 10:00:00.926078

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '4c5e5fe04acd'
down_revision = '75fd0f193787'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - adjusted ###
    op.execute("alter type keywordstatus add value if not exists 'obsolete'")
    op.create_table('keyword_audit',
                    sa.Column('id', sa.Integer(), sa.Identity(always=False), nullable=False),
                    sa.Column('client_id', sa.String(), nullable=False),
                    sa.Column('user_id', sa.String(), nullable=True),
                    sa.Column('command', postgresql.ENUM(name='auditcommand', create_type=False), nullable=False),
                    sa.Column('timestamp', sa.TIMESTAMP(timezone=True), nullable=False),
                    sa.Column('_vocabulary_id', sa.String(), nullable=False),
                    sa.Column('_id', sa.Integer(), nullable=False),
                    sa.Column('_key', sa.String(), nullable=False),
                    sa.Column('_data', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
                    sa.Column('_status', sa.String(), nullable=False),
                    sa.Column('_parent_id', sa.Integer(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('keyword',
                    sa.Column('vocabulary_id', sa.String(), nullable=False),
                    sa.Column('id', sa.Integer(), sa.Identity(always=False, start=1001), nullable=False),
                    sa.Column('key', sa.String(), nullable=False),
                    sa.Column('data', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
                    sa.Column('status', postgresql.ENUM(name='keywordstatus', create_type=False), nullable=False),
                    sa.Column('parent_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['parent_id'], ['keyword.id'], ondelete='RESTRICT'),
                    sa.ForeignKeyConstraint(['vocabulary_id'], ['vocabulary.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('vocabulary_id', 'key')
                    )
    op.add_column('vocabulary', sa.Column('uri', sa.String(), nullable=True))
    op.drop_constraint('vocabulary_schema_type_check', 'vocabulary', type_='check')
    op.create_check_constraint('vocabulary_schema_type_check', 'vocabulary', "schema_type in ('keyword', 'vocabulary')")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - adjusted ###
    op.drop_column('vocabulary', 'uri')
    op.drop_constraint('vocabulary_schema_type_check', 'vocabulary', type_='check')
    op.create_check_constraint('vocabulary_schema_type_check', 'vocabulary', "schema_type = 'vocabulary'")
    op.drop_table('keyword')
    op.drop_table('keyword_audit')
    # ### end Alembic commands ###
